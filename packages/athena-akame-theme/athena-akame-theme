import subprocess
import os

menu_options = {
    1: 'Border',
    2: 'Borderless',
    3: 'Exit',
}

def print_menu():
    print("\r")
    for key in menu_options.keys():
        print (key, '--', menu_options[key] )

def menu():
    while(True):
        print_menu()
        option = ''
        try:
            option = int(input('Would you like to have Border or Borderless theme? '))
        except:
            print('Wrong input. Please enter a number ...')
        #Check what choice was entered and act accordingly
        if option == 1:
            border = 1
            return border
        elif option == 2:
            border = 0
            return border
        elif option == 3:
            print('Exiting...')
            exit()
        else:
            print('Invalid option. Please enter a number between 1 and 3.')

home = os.path.expandvars("$HOME")
hyprland = os.path.expandvars("$HYPRLAND_INSTANCE_SIGNATURE")
    
subprocess.call("rm -rf "+home+"/.config/assets", shell=True)
subprocess.call("rm -rf "+home+"/.config/gtk-4.0", shell=True)
subprocess.call("mkdir -p "+home+"/.config/gtk-4.0", shell=True)
    
b = menu()
if b == 1:
    theme_name = "Nightfox-Dusk-B"
    gnome_shell = "Nightfox-Dusk-B"
else:
    theme_name = "Nightfox-Dusk-BL"
    gnome_shell = "Nightfox-Dusk-BL
color_scheme = "prefer-dark"
icon_theme = "Material-Black-Cherry-Suru"
cursor_theme = "Bibata-Modern-DarkRed"
background_theme = "/usr/share/backgrounds/default/akame.jpg"
picture_options = "stretched"
vscode_theme = "red-blood"
kitty_theme = "CrayonPonyFish.conf"
tmux_theme = "redwine
topbarcolorscheme = "finale"
topbarmaterialscheme = "finale"
topbariconscheme = "dark"
musicbarscheme = "#F98D89"


#Reinitialize gsettings for applying the changes correctly when we change between border and borderless in the same theme
subprocess.call("gsettings set org.gnome.desktop.interface gtk-theme \"\"", shell=True)
subprocess.call("gsettings set org.gnome.desktop.wm.preferences theme \"\"", shell=True)
subprocess.call("gsettings set org.gnome.shell.extensions.user-theme name \"\"", shell=True)
subprocess.call("sleep 1", shell=True)
subprocess.call("gsettings set org.gnome.desktop.interface gtk-theme "+theme_name, shell=True)
subprocess.call("gsettings set org.gnome.desktop.wm.preferences theme "+theme_name, shell=True)
subprocess.call("gsettings set org.gnome.shell.extensions.user-theme name "+gnome_shell+" 2>/dev/null", shell=True)

subprocess.call("ln -sf \"/usr/share/themes/"+theme_name+"/gtk-4.0/assets\" \""+home+"/.config/gtk-4.0/assets\"", shell=True)
subprocess.call("ln -sf \"/usr/share/themes/"+theme_name+"/gtk-4.0/gtk.css\" \""+home+"/.config/gtk-4.0/gtk.css\"", shell=True)
subprocess.call("ln -sf \"/usr/share/themes/"+theme_name+"/gtk-4.0/gtk-dark.css\" \""+home+"/.config/gtk-4.0/gtk-dark.css\"", shell=True)
subprocess.call("ln -sf \"/usr/share/themes/"+theme_name+"/assets\" \""+home+"/.config/assets\"", shell=True)

subprocess.call("gsettings set org.gnome.desktop.interface color-scheme "+color_scheme, shell=True)
subprocess.call("gsettings set org.gnome.desktop.interface icon-theme "+icon_theme, shell=True)
subprocess.call("gsettings set org.gnome.desktop.interface cursor-theme "+cursor_theme, shell=True)
subprocess.call("gsettings set org.gnome.desktop.background picture-uri-dark \"\"", shell=True)
subprocess.call("gsettings set org.gnome.desktop.background picture-uri-dark file://"+background_theme, shell=True)
subprocess.call("gsettings set org.gnome.desktop.background picture-uri \"\"", shell=True)
subprocess.call("gsettings set org.gnome.desktop.background picture-uri file://"+background_theme, shell=True)
subprocess.call("gsettings set org.gnome.desktop.background picture-options "+picture_options, shell=True)

subprocess.call("sed -i 's/\"workbench.colorTheme\":.*/\"workbench.colorTheme\": \""+vscode_theme+"\",/g' \""+home+"/.config/VSCodium/User/settings.json\"", shell=True)
subprocess.call("cp -rf "+home+"/.config/kitty/kitty-themes/themes/"+kitty_theme+" "+home+"/.config/kitty/current-theme.conf 2>/dev/null", shell=True)
subprocess.call("sed -i 's/set -g @tmux_power_theme.*/set -g @tmux_power_theme \'"+tmux_theme+"\'/g' "+home+"/.tmux.conf", shell=True)

# Top-right resource statistics color
subprocess.call("cp -rf "+home+"/.config/eww/css/savedcolors/_colorscheme_"+topbarcolorscheme+".scss "+home+"/.config/eww/css/_colorscheme.scss 2>/dev/null", shell=True)
subprocess.call("cp -rf "+home+"/.config/eww/css/savedcolors/_iconcolor_"+topbarcolorscheme+".txt "+home+"/.config/eww/css/_iconcolor.txt 2>/dev/null", shell=True)

# Top bar color
subprocess.call("cp -rf "+home+"/.config/eww/css/savedcolors/_material_"+topbarmaterialscheme+".scss "+home+"/.config/eww/css/_material.scss 2>/dev/null", shell=True)

# Top bar icon color
subprocess.call("cp -rf "+home+"/.config/eww/images/svg/"+topbariconscheme+"/* "+home+"/.config/eww/images/svg/ 2>/dev/null", shell=True)

# Hyprland border colors
subprocess.call("cp -rf "+home+"/.config/hypr/savedcolors/colors_"+topbarcolorscheme+".conf "+home+"/.config/hypr/colors.conf 2>/dev/null", shell=True)

# Hyprland wallpaper
subprocess.call("cp -rf "+background_theme+" "+home+"/.config/eww/images/wallpaper/wallpaper 2>/dev/null", shell=True)
subprocess.call("pkill swaybg 2>/dev/null", shell=True)
subprocess.call("swaybg -i "+home+"/.config/eww/images/wallpaper/wallpaper 2>/dev/null &", shell=True)

# Hyprland music color bars
subprocess.call("sed -r -i \"s/\\\"color4\\\":\\\"#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})\\\"/\\\"color4\\\":\\\""+musicbarscheme+"\\\"/g\" "+home+"/.config/eww/scripts/music 2>/dev/null", shell=True) # Don't use -e sed argument
